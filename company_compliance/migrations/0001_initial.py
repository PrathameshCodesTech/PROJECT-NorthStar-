# Generated by Django 5.2.4 on 2025-08-19 12:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyFramework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('full_name', models.CharField(max_length=200)),
                ('version', models.CharField(max_length=50)),
                ('template_framework_id', models.UUIDField()),
                ('is_customized', models.BooleanField(default=False)),
                ('customized_date', models.DateTimeField(blank=True, null=True)),
                ('activated_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'company_frameworks',
                'ordering': ['name', 'version'],
            },
        ),
        migrations.CreateModel(
            name='CompanyControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_code', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('objective', models.TextField()),
                ('template_control_id', models.UUIDField()),
                ('is_customized', models.BooleanField(default=False)),
                ('custom_description', models.TextField(blank=True)),
                ('custom_objective', models.TextField(blank=True)),
                ('custom_questions', models.JSONField(default=list)),
                ('control_type', models.CharField(choices=[('PREVENTIVE', 'Preventive'), ('DETECTIVE', 'Detective'), ('CORRECTIVE', 'Corrective')], default='PREVENTIVE', max_length=20)),
                ('frequency', models.CharField(choices=[('CONTINUOUS', 'Continuous'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ANNUALLY', 'Annually')], default='MONTHLY', max_length=20)),
                ('risk_level', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=1)),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controls', to='company_compliance.companyframework')),
            ],
            options={
                'db_table': 'company_controls',
                'ordering': ['framework', 'sort_order', 'control_code'],
                'unique_together': {('framework', 'control_code')},
            },
        ),
        migrations.CreateModel(
            name='AssessmentCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('PLANNING', 'Planning'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PLANNING', max_length=20)),
                ('created_by_employee_id', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='company_compliance.companyframework')),
            ],
            options={
                'db_table': 'assessment_campaigns',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('DASHBOARD', 'Dashboard Summary'), ('EXECUTIVE', 'Executive Report'), ('DETAILED', 'Detailed Assessment'), ('GAP_ANALYSIS', 'Gap Analysis'), ('AUDIT_TRAIL', 'Audit Trail')], max_length=20)),
                ('generated_date', models.DateTimeField(auto_now_add=True)),
                ('generated_by_employee_id', models.IntegerField()),
                ('overall_compliance_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_controls', models.IntegerField()),
                ('completed_controls', models.IntegerField()),
                ('report_data', models.JSONField()),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company_compliance.assessmentcampaign')),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='company_compliance.companyframework')),
            ],
            options={
                'db_table': 'compliance_reports',
                'ordering': ['-generated_date'],
            },
        ),
        migrations.CreateModel(
            name='ControlAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_to_employee_id', models.IntegerField()),
                ('assigned_by_employee_id', models.IntegerField()),
                ('assignment_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('IN_PROGRESS', 'In Progress'), ('PENDING_REVIEW', 'Pending Review'), ('COMPLETED', 'Completed'), ('NEEDS_REMEDIATION', 'Needs Remediation'), ('OVERDUE', 'Overdue')], default='NOT_STARTED', max_length=20)),
                ('priority', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='company_compliance.companycontrol')),
            ],
            options={
                'db_table': 'control_assignments',
                'ordering': ['-assignment_date'],
                'unique_together': {('control', 'assigned_to_employee_id')},
            },
        ),
        migrations.CreateModel(
            name='EvidenceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_requirement_id', models.UUIDField()),
                ('document_name', models.CharField(max_length=300)),
                ('original_filename', models.CharField(max_length=300)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size_mb', models.DecimalField(decimal_places=2, max_digits=10)),
                ('file_type', models.CharField(max_length=50)),
                ('uploaded_by_employee_id', models.IntegerField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('NEEDS_UPDATE', 'Needs Update')], default='PENDING', max_length=20)),
                ('reviewed_by_employee_id', models.IntegerField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_comments', models.TextField(blank=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='company_compliance.controlassignment')),
            ],
            options={
                'db_table': 'evidence_documents',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='RemediationPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gap_description', models.TextField()),
                ('root_cause', models.TextField(blank=True)),
                ('remediation_steps', models.TextField()),
                ('target_completion_date', models.DateField()),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('DELAYED', 'Delayed'), ('CANCELLED', 'Cancelled')], default='PLANNED', max_length=20)),
                ('priority', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', max_length=10)),
                ('created_by_employee_id', models.IntegerField()),
                ('assigned_to_employee_id', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remediation_plans', to='company_compliance.controlassignment')),
            ],
            options={
                'db_table': 'remediation_plans',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='AssessmentResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.UUIDField()),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(max_length=20)),
                ('answer', models.TextField()),
                ('answered_by_employee_id', models.IntegerField()),
                ('answered_date', models.DateTimeField(auto_now_add=True)),
                ('confidence_level', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='MEDIUM', max_length=10)),
                ('comments', models.TextField(blank=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company_compliance.assessmentcampaign')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='company_compliance.controlassignment')),
            ],
            options={
                'db_table': 'assessment_responses',
                'ordering': ['assignment', 'question_id'],
                'unique_together': {('assignment', 'question_id')},
            },
        ),
    ]
